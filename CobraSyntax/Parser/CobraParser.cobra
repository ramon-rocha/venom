
use ICSharpCode

namespace Venom.CobraSyntax

class CobraParser
	"""
	Turns Cobra source code into an abstract syntax tree (AST).
	"""
	
	var _compilerSettings as CobraCompilerSettings

	cue init
		.init(nil)
	
	cue init(compilerArgs as CobraCompilerSettings?)
		base.init
		_compilerSettings = compilerArgs ? CobraCompilerSettings()

	def parseTopLevel(path as String) as ISyntaxNode
		"""
		Accepts a path to a file containing Cobra source code. Reads all text
		in the file, parses it, and returns the resulting abstract syntax tree.
		"""
		source = File.readAllText(path)
		return .parseTopLevel(source, path)
	
	def parseTopLevel(source as String, fileName as String) as ISyntaxNode
		"""
		Accepts Cobra source code and an associated filename, the code is lexed, parsed,
		and the root node for the resulting abstract syntax tree is returned.
		"""
		stream = TokenStream(source, fileName)
		ast = CompilationUnit.parse(stream)
		return ast

	def parseStatement(source as String, fileName as String) as IStatement
		stream = TokenStream(source, fileName)
		stmt = Statement.parse(stream)
		return stmt

	def parseExpression(source as String, fileName as String) as IExpression
		stream = TokenStream(source, fileName)
		expr = Expression.parse(stream)
		return expr