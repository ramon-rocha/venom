
use ICSharpCode

namespace Venom.TypeSystem

class UsingScope inherits NRefactory.TypeSystem.Implementation.AbstractFreezable
	
	var _parent as UsingScope?
	get parent from var
	
	var _region as NRefactory.TypeSystem.DomRegion
	pro region from var
	
	var _shortName as String
	get shortNamespaceName from _shortName
	
	# see: https://github.com/icsharpcode/NRefactory/blob/master/ICSharpCode.NRefactory.CSharp/TypeSystem/UsingScope.cs#L40
	var _usings as IList<of NRefactory.TypeSystem.ITypeReference>?
	get usings from var
	
	
	def freezeInternal is protected
		# TODO
		base.freezeInternal
		
	cue init
		base.init
	
	cue init(parent as UsingScope, shortName as String)
		base.init
		_parent = parent
		_shortName = shortName
	
	get namespaceName as String
		if _parent <> nil
			return "[_parent.namespaceName].[_shortName]"
		return _shortName
	
	def resolve(compilation as NRefactory.TypeSystem.ICompilation) as ResolvedUsingScope
		cache = compilation.cacheManager
		resolved = cache.getShared(this) to ResolvedUsingScope?
		if resolved == nil
			context = CobraTypeResolveContext(compilation.mainAssembly, if(_parent, _parent.resolve(compilation), nil))
			resolved = cache.getOrAddShared(this, ResolvedUsingScope(context, this)) to ResolvedUsingScope
		return resolved to !
	

class ResolvedUsingScope
	
	var _parentContext as CobraTypeResolveContext
	var _usingScope as UsingScope
	
	cue init(context as CobraTypeResolveContext, usingScope as UsingScope)
		base.init
		_parentContext = context
		_usingScope = usingScope
		