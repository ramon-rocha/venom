<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{0FB2F70A-7183-4003-BF21-90310459176C}</ProjectGuid>
    <OutputType>Library</OutputType>
    <UsePartialTypes>false</UsePartialTypes>
    <AssemblyName>Venom</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\Debug</OutputPath>
    <ErrorReport>prompt</ErrorReport>
    <ConsolePause>false</ConsolePause>
    <Optimize>false</Optimize>
    <DebuggingTips>true</DebuggingTips>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <OutputPath>bin\Release</OutputPath>
    <ErrorReport>prompt</ErrorReport>
    <ConsolePause>false</ConsolePause>
    <PerformanceQualityOption>Turbo</PerformanceQualityOption>
    <Turbo>true</Turbo>
    <Contracts>none</Contracts>
    <IncludeAsserts>false</IncludeAsserts>
    <IncludeNilChecks>false</IncludeNilChecks>
    <IncludeTests>false</IncludeTests>
    <EmbedRunTime>true</EmbedRunTime>
    <Debug>off</Debug>
  </PropertyGroup>
  <ItemGroup>
    <Folder Include="TypeSystem\" />
    <Folder Include="CobraSyntax\" />
    <Folder Include="CobraSyntax\Statements\" />
    <Folder Include="CobraSyntax\Expressions\" />
    <Folder Include="CobraSyntax\Parser\" />
    <Folder Include="CobraSyntax\Statements\ExpressionStatements\" />
    <Compile Include="TypeSystem\CobraProjectContent.cobra" />
    <Compile Include="TypeSystem\CobraAssembly.cobra" />
    <Compile Include="TypeSystem\CobraTypeResolveContext.cobra" />
    <Compile Include="TypeSystem\UsingScope.cobra" />
    <Compile Include="TypeSystem\UnresolvedCobraFile.cobra" />
    <Compile Include="TypeSystem\Namespace.cobra" />
    <Compile Include="CobraSyntax\SyntaxNode.cobra" />
    <Compile Include="CobraSyntax\DocString.cobra" />
    <Compile Include="CobraSyntax\Expressions\Expression.cobra" />
    <Compile Include="CobraSyntax\AccessModifiers.cobra" />
    <Compile Include="CobraSyntax\Expressions\LiteralExpression.cobra" />
    <Compile Include="CobraSyntax\Expressions\BinaryOperatorExpression.cobra" />
    <Compile Include="CobraSyntax\Statements\ExpressionStatements\AssignmentStatement.cobra" />
    <Compile Include="CobraSyntax\Statements\ExpressionStatements\ExpressionStatement.cobra" />
    <Compile Include="CobraSyntax\Identifier.cobra" />
    <Compile Include="CobraSyntax\Expressions\IdentifierExpression.cobra" />
    <Compile Include="CobraSyntax\Expressions\ExpressionList.cobra" />
    <Compile Include="CobraCompilerSettings.cobra" />
    <Compile Include="CobraSyntax\Statements\DeclarationStatements\LocalDeclaration.cobra" />
    <Compile Include="CobraSyntax\Parser\CobraParser.cobra" />
    <Compile Include="CobraSyntax\Statements\DeclarationStatements\TypeDeclaration.cobra" />
    <Compile Include="CobraSyntax\Statements\DeclarationStatements\MemberDeclaration.cobra" />
    <Folder Include="CobraSyntax\Tokens\" />
    <Compile Include="CobraSyntax\Tokens\CobraTokenizer.cobra" />
    <Compile Include="CobraSyntax\Tokens\TokenStream.cobra" />
    <Compile Include="CobraSyntax\Tokens\TokenKind.cobra" />
    <Compile Include="CobraSyntax\Statements\Statement.cobra" />
    <Compile Include="CobraSyntax\Statements\UseDirective.cobra" />
    <Compile Include="CobraSyntax\Statements\PrintStatement.cobra" />
    <Folder Include="TestData\" />
    <Compile Include="TestData\TestData.cobra" />
    <Compile Include="CobraSyntax\Statements\StatementList.cobra" />
    <Compile Include="CobraSyntax\Statements\PassStatement.cobra" />
    <Compile Include="CobraSyntax\Statements\AssertStatement.cobra" />
    <Compile Include="CobraSyntax\Statements\BranchStatement.cobra" />
    <Compile Include="CobraSyntax\Statements\ContinueStatement.cobra" />
    <Compile Include="CobraSyntax\Statements\ExpectStatement.cobra" />
    <Compile Include="CobraSyntax\Statements\ForStatement.cobra" />
    <Compile Include="CobraSyntax\Statements\BreakStatement.cobra" />
    <Compile Include="CobraSyntax\Statements\IfStatement.cobra" />
    <Compile Include="CobraSyntax\Statements\IgnoreStatement.cobra" />
    <Compile Include="CobraSyntax\Statements\ListenStatement.cobra" />
    <Compile Include="CobraSyntax\Statements\LockStatement.cobra" />
    <Compile Include="CobraSyntax\Statements\RaiseStatement.cobra" />
    <Compile Include="CobraSyntax\Statements\ReturnStatement.cobra" />
    <Compile Include="CobraSyntax\Statements\ThrowStatement.cobra" />
    <Compile Include="CobraSyntax\Statements\TraceStatement.cobra" />
    <Compile Include="CobraSyntax\Statements\TryCatchBlock.cobra" />
    <Compile Include="CobraSyntax\Statements\UsingStatement.cobra" />
    <Compile Include="CobraSyntax\Statements\WhileStatement.cobra" />
    <Compile Include="CobraSyntax\Statements\YieldStatement.cobra" />
    <Compile Include="CobraSyntax\Statements\ExpressionStatements\CallStatement.cobra" />
    <Compile Include="CobraSyntax\Expressions\UnaryOperatorExpression.cobra" />
    <Compile Include="CobraSyntax\Expressions\ParenthesizedExpression.cobra" />
    <Compile Include="CobraSyntax\Expressions\CollectionLiteral.cobra" />
    <Compile Include="CobraSyntax\Expressions\StringLiteral.cobra" />
  </ItemGroup>
  <Import Project="$(MSBuildExtensionsPath)\Cobra\Cobra.targets" />
  <ItemGroup>
    <None Include="TestData\Notepad.cobra" />
    <None Include="TestData\grammar.txt" />
  </ItemGroup>
  <ItemGroup>
    <Reference Include="ICSharpCode.NRefactory">
      <HintPath>lib\ICSharpCode.NRefactory.dll</HintPath>
    </Reference>
    <Reference Include="Mono.Cecil">
      <HintPath>lib\Mono.Cecil.dll</HintPath>
    </Reference>
  </ItemGroup>
</Project>
